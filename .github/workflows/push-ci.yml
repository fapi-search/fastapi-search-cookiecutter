name: Push CI
on: pull_request

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.1.13"]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cookiecutter, poetry
        run: |
          python -m pip install --upgrade pip
          pip install cookiecutter poetry
      - name: Create search project
        run: |
          git config --global init.defaultBranch main
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          cookiecutter --no-input --output-dir /tmp .
      # Pull the latest images to build, and avoid caching pull-only images.
      - name: Pull the latest images
        working-directory: /tmp/search-project
        run: docker compose -f docker/docker-compose.yml pull
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build docker images
        working-directory: /tmp/search-project
        run: ./scripts/build.sh
      - name: Run app_database, search_database services
        working-directory: /tmp/search-project
        run: docker compose -f docker/docker-compose.yml up --build --detach
      - name: Wait for search database
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:9200/'
          responseCode: '200'
          timeout: 20000
          interval: 500
      - name: Run tests and coverage
        working-directory: /tmp/search-project
        run: docker compose -f docker/docker-compose.yml run --rm search_project_development ./scripts/test.sh 
